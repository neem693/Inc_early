<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.anylogic.iot.api.admin.booking.mapper.CnfrBookingMapper">


<delete id="resetIncidental" parameterType="Map">
	  delete from saehan.tb_booking_comcd_use
   	   where booking_conference_id = #{booking_reference_id}::int  
	</delete>


<select id="getIncidental" parameterType="Map" resultType="Map">
	select  
		a.booking_comcd_use_id
		, a.booking_conference_id
		, a.comcd_id
		, a.amount
		, a.count
		, a.remarks
		, (a.amount::int * a.count::int ) as totalAmount
		, to_char(a.create_dt,'YYYY-MM-DD hh24:mi:ss') as create_dt
		, to_char(a.update_dt,'YYYY-MM-DD hh24:mi:ss') as update_dt
		, (select comcd_major_nm from saehan.tb_comcode where comcd_id = a.comcd_id) as comcd_major_nm
		, (select comcd_minor_nm from saehan.tb_comcode where comcd_id = a.comcd_id) as comcd_minor_nm
		, a.vat_flag
	from saehan.tb_booking_comcd_use a
	where a.booking_conference_id = #{booking_conference_id}::int

</select>

<insert id="insertIncidental" parameterType="Map">
		INSERT INTO saehan.tb_booking_comcd_use
		(
			booking_conference_id
		  , comcd_id
		  , amount
		  ,	count
		  ,	remarks
		  ,	create_dt
		  , update_dt
		  ,	vat_flag
		)
		VALUES
		(
		    #{bookingConferenceId}::int
		  , #{comcd_id}::int
		  , #{amount}::int
		  , #{count}::int
		  , #{remarks}
		  , now()
		  , now()
   		  ,  #{vat_flag}

		)
	</insert>
	
<select id="getComcodeSecond" parameterType="Map" resultType="Map">
	select  
		comcd_id,
		comcd_minor_nm
	from saehan.tb_comcode
	where comcd_major_nm = #{nm}

</select>

<select id="getComcodeFirst" parameterType="Map" resultType="Map">
	select 
	
	distinct comcd_major_nm

	from saehan.tb_comcode

</select>

<select id="getBookingMemberList" parameterType="Map" resultType="Map">
		select 
			member_id,
			(select conference_id from saehan.tb_booking_conference where booking_conference_id = #{reservationNo}::int) as conference_id,
			(select meeting_start_time from saehan.tb_booking_conference where booking_conference_id = #{reservationNo}::int) as meeting_start_time,
			(select meeting_title from saehan.tb_booking_conference where booking_conference_id = #{reservationNo}::int) as meeting_title
			
			
		from saehan.tb_booking_participant
		where booking_conference_id = #{reservationNo}::int
		and member_id is not null
	</select>
	
	<select id="getConfInfo" parameterType="Map" resultType="Map">
    select 
		room_name,
		floor
	from saehan.tb_conference
	where
	conference_id =  #{conferenceId}::int

	</select>
	<!-- 브랜치 목록 조회 -->
	<select id="getBranchList" parameterType="Map" resultType="Map">
		SELECT b.branch_id
		     , max(b.branch_name) as branch_name
   		  FROM saehan.tb_branch b
   		     , saehan.tb_conference c
  		 WHERE (c.del_yn = 'n' or c.del_yn = 'N')
  		   and b.branch_id = c.branch_id
      group by b.branch_id
	  order by b.branch_id
	</select>

	<!-- 회의실 층수 목록  조회 -->
	<select id="getConferenceRoomFloorList" parameterType="Map" resultType="Map">
		SELECT a.branch_id
		     , a.floor
   		  FROM saehan.tb_conference a
  		 WHERE (a.del_yn = 'n' or a.del_yn = 'N')
      group by a.branch_id, a.floor
	  order by a.branch_id, a.floor
	</select>

	<!-- 회의실 층수 목록  조회 -->
	<select id="getConferenceRoomFloorList_backup" parameterType="Map" resultType="Map">
		SELECT a.floor
		     , a.branch_id
			 , max(b.branch_name) branch_name
   		  FROM saehan.tb_conference a
   		     , saehan.tb_branch b  		    
  		 WHERE a.branch_id = b.branch_id
		   AND (a.del_yn = 'n' or a.del_yn = 'N')
	     group by a.branch_id, a.floor
		 order by a.branch_id, a.floor
	</select>

	<!-- 예약현환 >> 회의실  목록  조회 : 칼린터용 -->
	<select id="getMeetingRoomList" parameterType="Map" resultType="Map">
	SELECT t1.conference_id
	     , CASE WHEN COALESCE(special_ratio,1) > 1 THEN t1.room_name || chr(10) || '(' || '특별룸'  || ' / ' || COALESCE(fixed_equip,'비품없음') || ')' 
	            ELSE t1.room_name || chr(10) || '(' || COALESCE(fixed_equip,'비품없음') || ')' END AS title
	     , t1.start_time
		 , t1.end_time
		 , COALESCE(special_ratio,1) AS special_ratio
		 , CASE WHEN COALESCE(special_ratio,1) > 1 THEN '#F5A9E1' ELSE 'silver' END AS event_color 
	 FROM ( SELECT a.conference_id
			     , a.room_name
				 , CASE a.state  
					   WHEN 'U' THEN '사용중' 
					   WHEN 'W' THEN '공실'
					   WHEN 'R' THEN '수리중'
		   			   ELSE '' 
				   END as state_nm
			     , a.start_time
				 , a.end_time
				 , a.fixed_equip
				 , a.special_ratio
	   		  FROM saehan.tb_conference a
	   		     , saehan.tb_branch b  		    
	  		 WHERE a.branch_id = b.branch_id
			   AND a.branch_id = CAST(#{branch} AS INTEGER) 
			   AND a.floor = #{floor}
			   AND (a.del_yn = 'n' or a.del_yn = 'N')
			   AND a.state != 'R'
		  ) t1
	order by conference_id
	</select>

	<!-- 회의실  예약 목록  조회 : 칼린터용 -->
	<select id="getCnfrBookingList" parameterType="Map" resultType="Map">
	SELECT ROW_NUMBER() OVER(ORDER BY t1.conference_id asc) as RNUM
	     , t2.booking_conference_id
	     , t1.conference_id
	     , to_char(t2.meeting_start_time,'YYYY-MM-DD') || 'T'  || to_char(t2.meeting_start_time,'hh24:mi:ss') as start
	     , to_char(t2.meeting_end_time,'YYYY-MM-DD') || 'T'  || to_char(t2.meeting_end_time,'hh24:mi:ss') as end
		 , t2.member_nm || chr(10) ||  '(' || COALESCE(t2.company_name, '개인') || ')' as title
		 , case when t2.member_id = CAST(#{loginMemberId} AS INTEGER) then 'MY' else 'YOU' end my_booking
		 , t2.meeting_title
		 , t2.member_nm || chr(10) ||  '(' || COALESCE(t2.company_real_name, '개인') || ')' as title2
		 
      FROM (SELECT a.conference_id
				 , a.room_name
				 , a.room_size
				 , a.floor
			     , a.start_time
				 , a.end_time
				 , a.state
				 , CASE a.state  
					   WHEN 'U' THEN '사용중' 
					   WHEN 'W' THEN '공실'
					   WHEN 'R' THEN '수리중'
		   			   ELSE '' 
				   END as state_nm
				 , a.fixed_equip
	 			 , ROW_NUMBER() OVER(ORDER BY a.conference_id asc ) as RNUM
	   		  FROM saehan.tb_conference a
	   		     , saehan.tb_branch b
	  		 WHERE a.branch_id = b.branch_id
			   AND (a.del_yn = 'n' or a.del_yn = 'N')
	   	       AND a.branch_id = CAST(#{branch} AS INTEGER)
			   AND a.floor = #{floor}
	
			) t1, (SELECT c.booking_conference_id
			            , c.conference_id
					    , c.meeting_start_time
						, c.meeting_end_time
						, (select company_name from saehan.tb_member WHERE member_id = c.member_id) as company_name
						, c.company_name as company_real_name
						, (select nm from saehan.tb_member WHERE member_id = c.member_id) as member_nm 
						, c.member_id 
						, c.meeting_title
	   		        FROM  saehan.tb_booking_conference c 
	   		       WHERE c.meeting_start_time between #{targetStartDate}::timestamp and #{targetEndDate}::timestamp 
	                  or c.meeting_end_time between #{targetStartDate}::timestamp and #{targetEndtDate}::timestamp 
	               order by conference_id, meeting_start_time
       		     ) t2
	    WHERE t1.conference_id = t2.conference_id
	      AND meeting_start_time is not null
        order by conference_id, start	      
	</select>
	
	<!-- 예약 등록 >> 예약 수장 상세 페이지   (select company_code from saehan.tb_member WHERE member_id = c.member_id) as company_code -->
	<select id="getMeetingRoomReserveDetail" parameterType="Map" resultType="Map">
		   select c.booking_conference_id
	        , c.conference_id
	        , (select nm from saehan.tb_member WHERE member_id =  CAST(c.member_id AS INTEGER) ) as member_nm
	        , (select meetingtype from saehan.tb_office_rent where office_rent_id = (
	       		 select office_rent_id from saehan.tb_member where member_id =  CAST(c.member_id AS INTEGER) )
	        	) as meetingtype
	        , d.fixed_equip
	        , c.meeting_title
	        <!-- , (select company_name from saehan.tb_member WHERE member_id = c.member_id) as company_name -->
	        , c.company_name
	        , to_char(c.meeting_start_time,'YYYY-MM-DD') as rsev_date  
	        , to_char(c.meeting_start_time,'hh24')  as rsev_start_time
	        , to_char(c.meeting_end_time,'hh24') as rsev_end_time
			, c.meeting_title
			, c.price
			, c.remarks
			, c.booking_type
			, (select count(*) from saehan.tb_booking_participant WHERE booking_conference_id = c.booking_conference_id and member_id is not null) as count_member
   		from  saehan.tb_booking_conference c
   		    , saehan.tb_conference d
	   where c.conference_id = d.conference_id 
	     and c.booking_conference_id = cast(#{booking_conference_id} as numeric) 
	</select>
	
	<!-- 예약 등록 >> 내부 회의 참석자 목록-->
	<select id="getInnerMeetingMember" parameterType="Map" resultType="Map">
	  select member_id
   		from saehan.tb_booking_participant
	   where booking_conference_id = cast(#{booking_conference_id} as numeric)
	     and member_id is not null  
	</select>

	<!-- 예약 등록 >> 외부  회의 참석자 목록-->
	<select id="getOuterMeetingMember" parameterType="Map" resultType="Map">
      select participant_name
		   , phone_number
   		from saehan.tb_booking_participant
	   where booking_conference_id = cast(#{booking_conference_id} as numeric)
	     and member_id is null  
	</select>
	
	<!-- 예약 등록 >> 예약 상세 -->
	<select id="getMeetingRoomReserveDetailPopup" parameterType="Map" resultType="Map">
	   select c.booking_conference_id 
	   		, c.member_id as booking_member_id
	        , to_char(c.meeting_start_time,'YYYY-MM-DD') as rsev_date  
	        , to_char(c.meeting_start_time,'hh24:mi') || '~' || to_char(c.meeting_end_time,'hh24:mi') || ' / ' || EXTRACT(HOUR FROM (meeting_end_time::time - meeting_start_time::time)) || ' 시간' as rsev_time
			, (select company_name from saehan.tb_member WHERE member_id = CAST(c.member_id AS INTEGER) ) as company_name
			, (select nm from saehan.tb_member WHERE member_id =  CAST(c.member_id AS INTEGER) ) as member_nm
			, c.meeting_contents
			, d.fixed_equip
			, c.meeting_title
			, c.company_name as company_real_name
			, (select count(*) from saehan.tb_booking_participant WHERE booking_conference_id = c.booking_conference_id ) as count_member
   		from  saehan.tb_booking_conference c
   		    , saehan.tb_conference d
	   where c.conference_id = d.conference_id 
	     and c.booking_conference_id = cast(#{booking_conference_id} as numeric) 
	</select>	

	<!-- 예약 취소 >> 예약취소 -->
	<select id="cancelMeetingRoomReserve" parameterType="Map">
	  delete from saehan.tb_booking_conference
   	   where booking_conference_id = cast(#{booking_conference_id} as numeric)  
	</select>
	
	<!-- 예약 등록 >> 회의실 참가인원 대상 목록 -->
	<select id="getMeetingMemberList" parameterType="Map" resultType="Map">
	SELECT t1.member_id
	     , COALESCE(t1.nm, ' ') as nm
	     , t1.office_rent_id
	     , COALESCE(t1.company_name, ' ') as company_name
		 , COALESCE(t1.dept_nm, ' ') as dept_nm
		 , t1.tel_no
		 , t1.hp_no
		 , t1.email
	  FROM saehan.tb_member t1
	     , (SELECT office_rent_id FROM saehan.tb_member WHERE member_id = CAST(#{loginMemberId} AS INTEGER)) t2     
	 WHERE t1.office_rent_id = t2.office_rent_id
	 ORDER BY case WHEN t1.member_id = CAST(#{loginMemberId} AS INTEGER) then 1 end, member_id	
	</select>
	
	<!-- 예약 수정 >> 회의실 참가인원 대상 목록(예약정보를 기반으로) -->
	<select id="getMeetingMemberListForEdit" parameterType="Map" resultType="Map">
	SELECT t1.member_id
	     , t1.nm
	     , t1.office_rent_id
	     , t1.company_name
		 , COALESCE(t1.dept_nm, ' ') as dept_nm
		 , t1.tel_no
		 , t1.hp_no
		 , t1.email
	  FROM saehan.tb_member t1
		 , (SELECT office_rent_id 
		      FROM saehan.tb_member a
		        , (SELECT member_id FROM saehan.tb_booking_conference WHERE booking_conference_id = CAST(#{booking_conference_id} AS INTEGER)) b
		      WHERE a.member_id = b.member_id
		   ) t2     	     
	     
	 WHERE t1.office_rent_id = t2.office_rent_id
	 ORDER BY member_id	
	</select>
	
	<!-- 예약 등록 >> 회의실  콤보박스 목록
	   AND t1.branch_id = ( SELECT t3.branch_id
							  FROM saehan.tb_member t1
							     , saehan.tb_office_rent_use t2
							     , saehan.tb_office t3
							 WHERE t1.office_rent_id = t2.office_rent_id
							   AND t2.office_id = t3.office_id			  
						       and t1.member_id = CAST(#{loginMemberId} AS INTEGER)
						  )
	 -->
	<select id="getMeetingRoomComboList" parameterType="Map" resultType="Map">
	SELECT t1.conference_id
		 , t1.room_name
		 , t1.branch_id
		 , (select branch_name from saehan.tb_branch where branch_id = t1.branch_id) as branch_name
		 , t1.floor
		 , t1.room_size
		 , t1.basic_hour
		 , t1.room_area
		 , t1.basic_fee
		 , to_char(t1.start_time, 'HH24') start_time
		 , to_char(t1.end_time, 'HH24') end_time
		 , t1.state
		 , t1.fixed_equip
		 , t1.descri
	  FROM saehan.tb_conference t1
	     , saehan.tb_branch t2  		    
	 WHERE t1.branch_id = t2.branch_id
	   AND t1.del_yn in ( 'N', 'n')
	   AND t1.state != 'R'	
  	 ORDER BY t1.conference_id
	</select>

	<!-- 예약 등록 >> 회의실 등록 가능한 날짜 시간인지 체크 -->
	<select id="checkMeetingRoomReserveTime" parameterType="Map" resultType="Map">
	   select c.conference_id
			, c.meeting_start_time
			, max(c.meeting_end_time) as meeting_end_time
			, (select company_name from saehan.tb_member WHERE member_id = max(c.member_id)) as company_name
			, (select nm from saehan.tb_member WHERE member_id = max(c.member_id)) as member_nm 
   		from  saehan.tb_booking_conference c 
   	   where (c.meeting_start_time between #{meetingOpenTime1}::timestamp and #{meetingOpenTime2}::timestamp 
          or c.meeting_end_time between #{meetingCloseTime1}::timestamp and #{meetingCloseTime2}::timestamp)
         and c.conference_id = CAST(#{conferenceId} AS INTEGER)
		<if test="saveMode == 'UPDATE'">
         and c.booking_conference_id != CAST(#{bookingConferenceId} AS numeric)
		</if>
       group by c.conference_id, meeting_start_time
	</select>
		
	<select id="getMaxBookingConferenceIdSeq" parameterType="Map" resultType="String">
		SELECT nextval('saehan.tb_booking_conference_booking_conference_id_seq') as booking_conference_id
	</select>
		
	<insert id="insertMeetingRoomReserve" parameterType="Map">
		INSERT INTO saehan.tb_booking_conference
		(
			booking_conference_id
		  , conference_id
		  , meeting_start_time
		  ,	meeting_end_time
		  ,	company_name
		  ,	member_id
		  , meeting_title
		  ,	created_date
		  , price
		  , remarks
		  , booking_type
		)
		VALUES
		(
		    CAST(#{bookingConferenceId} AS numeric)
		  , CAST(#{conferenceId} AS numeric) 
		  , #{meetingStartTime}::timestamp
		  , #{meetingEndTime}::timestamp
		  , #{companyName}
		  , CAST(#{memberId} AS INTEGER)
		  , #{meeting_title} 
   		  , now()
   		  , #{inputRentFee}::int
   		  , #{remarks} 
		  , #{booking_type}::int
		)
	</insert>
		 
	<!-- 회의실 예약 수정 -->
	<update id="updateMeetingRoomReserve" parameterType="Map">
		UPDATE saehan.tb_booking_conference
		   SET conference_id = CAST(#{conferenceId} AS numeric)
		     , meeting_start_time = #{meetingStartTime}::timestamp
		     , meeting_end_time = #{meetingEndTime}::timestamp
		     , meeting_title = #{meeting_title}
		      , booking_type = #{booking_type}::int
		      , price = #{price}::int
  		 WHERE booking_conference_id = cast(#{bookingConferenceId} as numeric)
	</update>	

	<!-- 회의실 예약 멤버 삭제 -->
	<select id="deleteMeetingRoomMember" parameterType="Map">
	  delete from saehan.tb_booking_participant
   	   where booking_conference_id = cast(#{bookingConferenceId} as numeric)  
	</select>
	
	<insert id="insertMeetingMember" parameterType="Map">
		INSERT INTO saehan.tb_booking_participant
		(
			booking_participant_id
		  , booking_conference_id
		  , member_id
		  , participant_name
		  , company_name
		  , phone_number
		  --, status
		  , created_date
		  , send_prof_num		
		)
		VALUES
		(
			nextval('saehan.tb_booking_participant_booking_participant_id_seq')
		  , CAST(#{bookingConferenceId} AS numeric)
		  , cast(#{memberId} as INTEGER)
		  , #{participantName}
		  , #{companyName}		  
		  , #{phoneNumber}		  
		 --, 숫자 두자리의 공통 코드
   		  , now()
   		  , #{sendProfNum}::int
		)
	</insert>


	<insert id="insertBookingHistory" parameterType="Map">
		INSERT INTO saehan.tb_booking_history
		(
			booking_history_id
		  , office_rent_id
		  , booking_type
		  ,	booking_reference_id
		  , booking_hour
		  ,	member_id
		  , time_use_type
		  ,	create_date
		)
		VALUES
		(
		    nextval('saehan.tb_booking_history_booking_history_id_seq')
		  , (SELECT office_rent_id FROM saehan.tb_member WHERE member_id = CAST(#{memberId} AS INTEGER))
		  , #{booking_type}
		  , CAST(#{booking_reference_id} AS numeric) 
          , #{booking_hour}
		  , CAST(#{memberId} AS INTEGER) 
		  , #{time_use_type}
   		  , now()
		)
	</insert>
	
	<select id="getBookingHistory" parameterType="Map" resultType="Map">
	SELECT t.time_use_type
		 , t.booking_hour
	  from (SELECT ROW_NUMBER() OVER(ORDER BY booking_history_id desc) as RNUM
		  	     , time_use_type
			     , booking_hour
			  FROM saehan.tb_booking_history
			 WHERE booking_reference_id = cast(#{booking_reference_id} as numeric)
		 ) t
	 where RNUM = 1	 
	</select>
	
	<!-- 예약 가능시간 추가 또는 차감-->
	<update id="updateTimeUpDown3" parameterType="Map">
		
		UPDATE saehan.tb_office_rent
		   SET default_time = COALESCE(default_time,0) +  #{add_default_time}::int
		     , payment_time = COALESCE(payment_time,0) + #{add_payment_time}::int
  		 <!-- WHERE office_rent_id = (SELECT office_rent_id FROM saehan.tb_member WHERE member_id = CAST(#{memberId} AS INTEGER)) -->
  		<!--  WHERE office_rent_id = (SELECT office_rent_id FROM saehan.tb_office_rent WHERE company_name = #{company_name}) -->
  		 WHERE office_rent_id = (SELECT office_rent_id FROM saehan.tb_member WHERE member_id = CAST(#{memberId} AS INTEGER))
	</update>	
	
	<update id="updateTimeUpDown2" parameterType="Map">
		 UPDATE saehan.tb_office_rent
		   SET default_time = COALESCE(default_time,0) +  #{resv_time}::int
  		<!--  WHERE office_rent_id = (SELECT office_rent_id FROM saehan.tb_member WHERE member_id = CAST(#{memberId} AS INTEGER)) --> 
  		 WHERE office_rent_id = #{selectedOfficeRentId}::int
		
	</update>	
	
	
	<!-- 예약 가능시간 추가 또는 차감-->
<update id="updateTimeUpDown" parameterType="Map">
		UPDATE saehan.tb_office_rent
		   SET default_time = COALESCE(default_time,0) + #{add_default_time}::int
		     , payment_time = COALESCE(payment_time,0) + #{add_payment_time}::int
  		 WHERE office_rent_id = (SELECT office_rent_id FROM saehan.tb_member WHERE member_id = CAST(#{memberId} AS INTEGER))
	</update>

	<!-- 회의실 예약 가능시간 조회 -->
	<select id="getRemainTime" parameterType="Map" resultType="Map">
		SELECT COALESCE( case when COALESCE(payment_time, 0) = 0 then default_time else payment_time end, 0) as remain_time
			 , COALESCE(payment_time, 0) as payment_time
			 , COALESCE(default_time, 0) as default_time
			 , default_offer_time
			 , payment_buying_time
             , (select EXTRACT(HOUR FROM (#{meetingEndTime}::timestamp - #{meetingStartTime}::timestamp)) * COALESCE(special_ratio,1) from saehan.tb_conference where conference_id = #{conferenceId}::int ) as resv_time			 
	      FROM saehan.tb_office_rent
		 WHERE office_rent_id = #{selectedOfficeRentId}::int
	</select>
	
</mapper>
