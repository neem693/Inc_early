<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.anylogic.iot.api.common.mapper.CommonMapper">


	<!-- 코드 상세 조회 -->
	<!-- <select id="listDtlCd" parameterType="Map" resultType="com.anylogic.iot.api.common.vo.CommonCodeVO">
		SELECT
			  lang_cd as langCd
			, dtl_cd as dtlCd
			, dtl_cd_nm as dtlCdNm
		FROM CD_DTL
		WHERE cd_group_id = #{cdGroupId}
		AND use_yn = 'Y'
		AND del_yn = 'N'
		언어 코드
		<if test="langCd != null and !langCd.isEmpty()">
			AND lang_cd = #{langCd}
		</if>
		ORDER BY dtl_cd
	</select> -->


	<!-- [paging] 페이징처리 Header  -->
    <sql id="pagingHeaderSql">
    	SELECT *,
    		   V.rnum as "RNUM",
		       V.start_num as "startNum",
		       V.end_num as "endNum",
		       V.MAX_VIEW_PAGE as "maxViewPage",
		       V.PAGE_SIZE as "pageCon",
		       V.CUR_PAGE as "pageNum",
		       V.TOTAL_CNT as "totalCnt"
		  FROM (
		  		SELECT *
		     	  FROM (
		    			SELECT (CASE
		                        	WHEN (TOTAL_CNT%cast(#{pageCon} as numeric)) = 0 THEN TOTAL_CNT/cast(#{pageCon} as numeric)
		                        	ELSE TOTAL_CNT/cast(#{pageCon} as numeric) + 1
		                      	END) MAX_VIEW_PAGE
		    			       ,cast(#{pageCon} as numeric) PAGE_SIZE
		    			       ,cast(#{pageNum} as numeric) CUR_PAGE
		    			       ,Y.*
		       			  FROM (
		              			SELECT (CASE
		                        			WHEN (cast(#{pageCon} as numeric) * (cast(#{pageNum} as numeric) - 1) + 1) &gt; TOTAL_CNT THEN 1
		                        			ELSE (cast(#{pageCon} as numeric) * (cast(#{pageNum} as numeric) - 1) + 1)
		                      			END) START_NUM
		                     		   ,(CASE
		                        			WHEN (cast(#{pageNum} as numeric) * cast(#{pageCon} as numeric)) &gt; TOTAL_CNT THEN TOTAL_CNT
		                        			ELSE (cast(#{pageNum} as numeric) * cast(#{pageCon} as numeric))
		                      			END) END_NUM
		                     		   , X.*
		              			  FROM (SELECT COUNT (*) OVER () TOTAL_CNT, Z.*
		                     			  FROM (
    </sql>


    <!-- [paging] 페이징처리 Footer  -->
    <sql id="pagingFooterSql">
    		                          		   ) Z
			                   		   ) X
			               	   ) Y
			      	   )W
			     WHERE RNUM &lt;= END_NUM
			   )V
		 WHERE RNUM &gt;= START_NUM
    </sql>

	<select id="listSvc" parameterType="Map" resultType="com.anylogic.iot.api.common.vo.ResultSvcListVO">
		SELECT
			  u.dstr_cd as dstrCd
			, u.svc_theme_cd as svcThemeCd
			, u.unit_svc_cd as unitSvcCd
			, t.unit_svc_nm as unitSvcNm
			, d.dstr_cd_nm as dstrNm
			, v.svc_theme_nm as svcThemeNm
		FROM USER_BY_UNIT_SVC_REL u, tb_cam_unit_svc t, tb_cam_dstr_cd d, tb_cam_svc_theme v
		WHERE u.del_yn = 'N'
		AND u.user_id = #{userId}
		AND u.dstr_cd=d.dstr_cd
		AND (u.svc_theme_cd=v.svc_theme_cd AND u.dstr_cd=v.dstr_cd)
		AND (u.unit_svc_cd=t.unit_svc_cd AND u.svc_theme_cd=t.svc_theme_cd AND u.dstr_cd=t.dstr_cd)
	</select>
	
	<insert id="efctDevBatch" >
	insert into efct_dev_stat 
		select sts.dstr_cd,
			sts.svc_theme_cd,
			sts.unit_svc_cd,
			sts.svc_tgt_seq,
			(current_date - 1) as stat_hst_dt,
			'1' AS svc_tgt_cnt,
			( select count(spot_dev_seq)
			  from spot_dev_bas
			  where del_yn = 'N'
			  <!--  2016.02.04 by nicas.you - 사용유무 체크 삭제
			  and use_yn = 'Y' -->
			  and to_char(cret_dt, 'YYYY-MM-DD') <![CDATA[ < ]]> to_char(now(), 'YYYY-MM-DD')
			  and svc_tgt_seq in(sts.svc_tgt_seq)
			) as dev_tot_cnt,
			( select count(*) from
				(select count( spot_dev_seq)
				from rtime_dev_data_upd_txn
				where svc_tgt_seq in (sts.svc_tgt_seq)
				and to_char(upd_dt,'YYYY-MM-DD') <![CDATA[ <= ]]> to_char(now(), 'YYYY-MM-DD')
				and to_char(upd_dt,'YYYY-MM-DD') <![CDATA[ >= ]]> to_char(now() - interval '1 day', 'YYYY-MM-DD')
				and upd_dt is not null
				group by svc_tgt_seq, spot_dev_seq  ) rtimeDev
			) as efct_dev_cnt
		from
		(
			select a.dstr_cd , b.svc_theme_cd , c.unit_svc_cd , d.svc_tgt_seq
			from tb_cam_dstr_cd a, tb_cam_svc_theme b, tb_cam_unit_svc c, svc_tgt_bas d
		
			where a.dstr_cd = b.dstr_cd
			and b.dstr_cd = c.dstr_cd and b.svc_theme_cd = c.svc_theme_cd
			and c.dstr_cd = d.dstr_cd and c.svc_theme_cd = d.svc_theme_cd and c.unit_svc_cd = d.unit_svc_cd		
			and a.del_yn = 'N'
			and	b.del_yn = 'N'
			and c.del_yn = 'N'
			and d.del_yn = 'N'		
			and	to_char(d.cret_dt, 'YYYY-MM-DD') <![CDATA[ < ]]>  to_char(now(), 'YYYY-MM-DD')
		) sts
		order by sts.svc_tgt_seq	

	</insert> 
	
	<delete id="evetDelBatch">
	delete from evet_outb_stat
	where to_char(cret_dt, 'YYYYMMDDHH24MISS') <![CDATA[ < ]]> to_char(now() - interval '72 hour', 'YYYYMMDDHH24MISS') 
	</delete>
	
	
	<select id="listSvcTgt" parameterType="Map" resultType="Map">
	select svc_tgt_seq as svcTgtSeq,
		   dstr_cd as dstrCd,
		   svc_theme_cd as svcThemeCd,
		   unit_svc_cd as unitSvcCd,
		   svc_tgt_id as svcTgtId,
		   svc_tgt_nm as svcTgtNm,
		   old_zipcd as oldZipcd,
		   old_adr1 as oldAdr1,
		   old_adr2 as oldAdr2,
		   new_zipcd as newZipcd,
		   new_adr1 as newAdr1,
		   new_adr2 as newAdr2
	from svc_tgt_bas
	where svc_tgt_seq =  #{svcTgtSeq}
		   
	</select>
	
	<select id="selectDevInfo" resultType="Map">
	select spot_dev_seq as spotDevSeq,
			svc_tgt_seq as svcTgtSeq,
			dev_nm as devNm,
			spot_dev_id as spotDevId,
			latit_val as latitVal,
			lngit_val as lngitVal
	from spot_dev_bas
	where (latit_val = null or lngit_val = null)
	or (latit_val = 0.000000 or lngit_val = 0.000000)
	</select>
	
	<update id="updateDevGPS" parameterType="Map">
		UPDATE spot_dev_bas
		SET
			  latit_val = #{latitVal}
			, lngit_val = #{lngitVal}
			
		WHERE spot_dev_seq = #{spotDevSeq}
		and svc_tgt_seq = #{svcTgtSeq}
	</update>
	
	<update id="updateSvcTgtGPS" parameterType="Map">
	UPDATE svc_tgt_seq
		SET
			  latit_val = #{latitVal}
			, lngit_val = #{lngitVal}
			
		WHERE svc_tgt_seq = #{svcTgtSeq}
		
	</update>
	<select id="selectNullAdrFoodIms" resultType="Map">
	select
		a.svc_tgt_seq as svcTgtSeq, 
		b.spot_dev_seq as spotDevSeq, 
		b.eqp_lo_sbst as eqpLoSbst, 
		b.lngit_val as lngitVal, 
		b.latit_val as latitVal
	from
	(select svc_tgt_seq, dstr_cd, svc_theme_cd, unit_svc_cd from svc_tgt_bas where dstr_cd = '001' and svc_theme_cd = 'IMS' and unit_svc_cd = '001') a
	inner join
	(select spot_dev_seq, svc_tgt_seq, eqp_lo_sbst, lngit_val, latit_val from spot_dev_bas where latit_val &gt; 32 and latit_val &lt; 39 and lngit_val &gt; 123 and lngit_val &lt; 132) b
	on a.svc_tgt_seq = b.svc_tgt_seq
	</select>
	
	<update id="updateFoodImsDevAdr" parameterType="Map">
		UPDATE spot_dev_bas
		SET
			  eqp_lo_sbst = #{eqpLoSbst}			
		WHERE spot_dev_seq = #{spotDevSeq}
		and svc_tgt_seq = #{svcTgtSeq}
	</update>
	
	
	<insert id="insertHomeCamMemberJoinBatch" parameterType="Map">
	insert into smcp.tb_hc_sbscr_stat(
		deal_date,
		sbsc_trmn_div,
		cascnt,
		accum_cascnt,
		lnk_dt	
	)
	VALUES(
	 to_date(#{date_str}, 'YYYY-MM-DD'),
	 '1',
	 #{operate},
	 #{accrueoperate},
	 to_date(#{date_str}, 'YYYY-MM-DD')
	)
	
	</insert>
	
	<insert id="insertHomeCamMemberCancelBatch" parameterType="Map">
	insert into smcp.tb_hc_sbscr_stat(
		deal_date,
		sbsc_trmn_div,
		cascnt,
		accum_cascnt,
		lnk_dt	
	)
	VALUES(
	  to_date(#{date_str}, 'YYYY-MM-DD'),
	 '2',
	 #{cancel},
	 #{accrueoperate},
	 to_date(#{date_str}, 'YYYY-MM-DD')
	)
	
	</insert>
	
	<insert id="insertHomeCamDevCtrlBatch" parameterType="Map">
	insert into smcp.tb_hc_terml_contl_stat(
		deal_date,
		contl_type,
		cascnt,
		lnk_dt	
	)
	VALUES(
	  now(),
	  #{contl_type},
	 #{cascnt},	
	 now()
	)
	</insert>
</mapper>




